import 'dart:ui';

import 'package:overlap/models/arcade_chapter.dart';
import 'package:overlap/models/stage_data.dart';

/// 2025년 1월 챕터 스테이지 데이터.
final List<StageData> januaryStages = List<StageData>.unmodifiable([
  StageData(
    id: 1,
    order: 1,
    title: 'Stage 1: Spark',
    minMoves: 3,
    blockNames: const ['O', 'T'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
      [0, 0, 1, 0, 0],
      [0, 0, 0, 0, 0],
    ],
  ),
  StageData(
    id: 2,
    order: 2,
    title: 'Stage 2: Bridge',
    minMoves: 4,
    blockNames: const ['O', 'S'],
    solutionPattern: const [
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 0, 0, 0, 0],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
    ],
  ),
  StageData(
    id: 3,
    order: 3,
    title: 'Stage 3: Arrow',
    minMoves: 4,
    blockNames: const ['T', 'J'],
    solutionPattern: const [
      [0, 1, 0, 1, 0],
      [0, 1, 1, 1, 0],
      [1, 1, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 1, 0, 1, 0],
    ],
  ),
  StageData(
    id: 4,
    order: 4,
    title: 'Stage 4: Steps',
    minMoves: 5,
    blockNames: const ['L', 'O'],
    solutionPattern: const [
      [1, 0, 0, 0, 0],
      [1, 1, 0, 0, 0],
      [0, 1, 1, 0, 0],
      [0, 0, 1, 1, 0],
      [0, 0, 0, 1, 1],
    ],
  ),
  StageData(
    id: 5,
    order: 5,
    title: 'Stage 5: Pulse',
    minMoves: 5,
    blockNames: const ['T', 'O', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
      [0, 0, 1, 0, 0],
    ],
  ),
  StageData(
    id: 6,
    order: 6,
    title: 'Stage 6: Fork',
    minMoves: 5,
    blockNames: const ['T', 'L', 'J', 'O'],
    solutionPattern: const [
      [0, 1, 0, 1, 0],
      [1, 1, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 1, 0, 1, 0],
      [0, 1, 0, 1, 0],
    ],
  ),
  StageData(
    id: 7,
    order: 7,
    title: 'Stage 7: Spiral',
    minMoves: 6,
    blockNames: const ['S', 'Z', 'L', 'J', 'T', 'O'],
    solutionPattern: const [
      [1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1],
      [1, 1, 1, 0, 1],
      [1, 0, 1, 1, 1],
      [1, 0, 0, 0, 0],
    ],
  ),
  StageData(
    id: 8,
    order: 8,
    title: 'Stage 8: Shield',
    minMoves: 6,
    blockNames: const ['O', 'T', 'J', 'L', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 1, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 0, 1, 0],
      [0, 1, 0, 1, 0],
    ],
  ),
  StageData(
    id: 9,
    order: 9,
    title: 'Stage 9: Gateway',
    minMoves: 6,
    blockNames: const ['L', 'J', 'T', 'O', 'S'],
    solutionPattern: const [
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 0, 1, 0],
      [0, 1, 1, 1, 0],
    ],
  ),
  StageData(
    id: 10,
    order: 10,
    title: 'Stage 10: Cascade',
    minMoves: 6,
    blockNames: const ['L', 'J', 'S', 'Z', 'T', 'O'],
    solutionPattern: const [
      [0, 0, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [1, 1, 1, 0, 0],
      [1, 1, 0, 0, 0],
      [1, 0, 0, 0, 0],
    ],
  ),
  StageData(
    id: 11,
    order: 11,
    title: 'Stage 11: Twin',
    minMoves: 7,
    blockNames: const ['O', 'T', 'S', 'Z', 'L', 'J'],
    solutionPattern: const [
      [1, 0, 0, 0, 1],
      [1, 1, 0, 1, 1],
      [1, 1, 1, 1, 1],
      [1, 1, 0, 1, 1],
      [1, 0, 0, 0, 1],
    ],
  ),
  StageData(
    id: 12,
    order: 12,
    title: 'Stage 12: Comet',
    minMoves: 7,
    blockNames: const ['S', 'Z', 'T', 'L', 'J', 'O'],
    solutionPattern: const [
      [0, 0, 1, 0, 0],
      [0, 1, 1, 1, 0],
      [1, 1, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
    ],
  ),
  StageData(
    id: 13,
    order: 13,
    title: 'Stage 13: Prism',
    minMoves: 7,
    blockNames: const ['T', 'O', 'L', 'J', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [1, 1, 1, 1, 1],
      [0, 1, 0, 1, 0],
    ],
  ),
  StageData(
    id: 14,
    order: 14,
    title: 'Stage 14: Labyrinth',
    minMoves: 8,
    blockNames: const ['L', 'J', 'T', 'S', 'Z', 'O'],
    solutionPattern: const [
      [1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1],
      [1, 1, 1, 0, 1],
      [1, 0, 1, 1, 1],
      [1, 0, 0, 0, 1],
    ],
  ),
  StageData(
    id: 15,
    order: 15,
    title: 'Stage 15: Crown',
    minMoves: 8,
    blockNames: const ['T', 'L', 'J', 'O', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 0, 1, 0],
      [1, 1, 1, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
    ],
  ),
  StageData(
    id: 16,
    order: 16,
    title: 'Stage 16: Nebula',
    minMoves: 8,
    blockNames: const ['T', 'S', 'Z', 'L', 'J', 'O'],
    solutionPattern: const [
      [1, 1, 1, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 1, 1, 1, 0],
      [1, 1, 0, 1, 1],
    ],
  ),
  StageData(
    id: 17,
    order: 17,
    title: 'Stage 17: Hive',
    minMoves: 9,
    blockNames: const ['O', 'L', 'J', 'T', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 0, 1, 1],
      [1, 0, 0, 0, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 1, 1, 0],
    ],
  ),
  StageData(
    id: 18,
    order: 18,
    title: 'Stage 18: Vortex',
    minMoves: 9,
    blockNames: const ['L', 'J', 'S', 'Z', 'T', 'O'],
    solutionPattern: const [
      [1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1],
      [1, 0, 1, 0, 1],
      [1, 0, 1, 0, 1],
      [1, 1, 1, 1, 1],
    ],
  ),
  StageData(
    id: 19,
    order: 19,
    title: 'Stage 19: Halo',
    minMoves: 9,
    blockNames: const ['T', 'L', 'J', 'O', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [1, 1, 0, 1, 1],
      [0, 1, 1, 1, 0],
    ],
  ),
  StageData(
    id: 20,
    order: 20,
    title: 'Stage 20: Heartcore',
    minMoves: 10,
    blockNames: const ['O', 'T', 'L', 'J', 'S', 'Z'],
    solutionPattern: const [
      [0, 1, 1, 1, 0],
      [1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [0, 1, 1, 1, 0],
      [0, 0, 1, 0, 0],
    ],
  ),
]);

/// 아케이드 챕터(월) 구성 데이터.
final List<ArcadeChapter> arcadeChapters = List<ArcadeChapter>.unmodifiable([
  ArcadeChapter(
    id: 'january',
    title: '2025 January',
    stages: januaryStages,
    plannedStageCount: 20,
    primaryColor: const Color(0xFF4E5AFE),
    secondaryColor: const Color(0xFF7B5BFF),
  ),
  ArcadeChapter(
    id: 'february',
    title: 'February',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFFFF6F91),
    secondaryColor: const Color(0xFFFF9671),
  ),
  ArcadeChapter(
    id: 'march',
    title: 'March',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF2DD4BF),
    secondaryColor: const Color(0xFF20A4F3),
  ),
  ArcadeChapter(
    id: 'april',
    title: 'April',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF6EE7B7),
    secondaryColor: const Color(0xFF3FA7D6),
  ),
  ArcadeChapter(
    id: 'may',
    title: 'May',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFFFFA45B),
    secondaryColor: const Color(0xFFFF764C),
  ),
  ArcadeChapter(
    id: 'june',
    title: 'June',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFFFA8BFF),
    secondaryColor: const Color(0xFF2BD2FF),
  ),
  ArcadeChapter(
    id: 'july',
    title: 'July',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFFFF5F7E),
    secondaryColor: const Color(0xFFFF99AC),
  ),
  ArcadeChapter(
    id: 'august',
    title: 'August',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF54D3C2),
    secondaryColor: const Color(0xFF3A8FB7),
  ),
  ArcadeChapter(
    id: 'september',
    title: 'September',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF9F7AEA),
    secondaryColor: const Color(0xFF7F5AF0),
  ),
  ArcadeChapter(
    id: 'october',
    title: 'October',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFFFF8C42),
    secondaryColor: const Color(0xFFFB4A4D),
  ),
  ArcadeChapter(
    id: 'november',
    title: 'November',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF5E81FF),
    secondaryColor: const Color(0xFF50C9C3),
  ),
  ArcadeChapter(
    id: 'december',
    title: 'December',
    stages: const <StageData>[],
    plannedStageCount: 20,
    primaryColor: const Color(0xFF61C0FF),
    secondaryColor: const Color(0xFF3A47D5),
  ),
]);

/// 편의상 모든 스테이지를 일괄 접근할 수 있는 목록/맵 제공.
final List<StageData> arcadeStages = List<StageData>.unmodifiable([
  for (final chapter in arcadeChapters) ...chapter.stages,
]);

final Map<int, StageData> arcadeStageMap = Map<int, StageData>.unmodifiable({
  for (final stage in arcadeStages) stage.id: stage,
});
